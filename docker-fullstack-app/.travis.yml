# 언어 설정
language: generic

# 관리자 권한 부여
sudo: required

# 빌드할 서비스 이름
services:
  - docker

# 사전 작업으로 도커 이미지를 빌드함
# docker build -t {빌드할 이미지 이름} -f {빌드에 쓸 도커파일} {도커파일 위치}
before_install:
  - docker build -t mhd329/react-test-app -f ./frontend/Dockerfile.dev ./frontend

# 빌드된 이미지로 테스트
# docker run -e {설정할 컨테이너 환경변수} {기반 이미지} {컨테이너 내부에서 실행될 명령어}
# 실제 테스트는 생략했다.
script:
  - docker run -e CI=true mhd329/react-test-app npm run test

# 테스트 성공 후 실제 배포를 위한 이미지들을 빌드
# 주석을 위쪽에 먼저 써놓으니까 command not found 에러가 발생했다.
after_success:
  - docker build -t mhd329/docker-websocket ./websocket # 이미지 빌드
  - docker build -t mhd329/docker-frontend ./frontend # docker build -t {이미지 이름} {도커 파일의 위치}
  - docker build -t mhd329/docker-backend ./backend # 도커파일을 따로 지정하지 않았기 때문에 위치만 지정하면 된다.
  - docker build -t mhd329/docker-nginx ./nginx

  - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_ID" --password-stdin # 도커 로그인
  # '|' 는 파이프 문자이며, 어떤 출력을 다른 명령어의 입력으로 연결해준다.

  - docker push mhd329/docker-websocket # 빌드된 이미지를 도커 허브에 푸쉬
  - docker push mhd329/docker-frontend # docker push {이미지 이름}
  - docker push mhd329/docker-backend
  - docker push mhd329/docker-nginx

deploy: # 배포 설정
  provider: elasticbeanstalk # 외부 서비스 표시(S3, EB, firebase 등)
  region: "ap-northeast-2" # 서비스의 물리적 장소
  app: "Docker-fullstack-app" # 어플리케이션 이름
  env: "Docker-fullstack-app-env" # 환경의 이름
  bucket_name: elasticbeanstalk-ap-northeast-2-544545176142 # 해당 eb를 위한 s3 버킷 이름
  bucket_path: "Docker-fullstack-app" # 버킷 경로 (앱 이름과 동일)
  on:
    branch: master # 어떤 branch에 push할 때 AWS 배포를 할 것인지 설정

  access_key_id: $AWS_ACCESS_KEY # aws iam의 access key
  secret_access_key: $AWS_SECRET_ACCESS_KEY # aws iam의 secret access key